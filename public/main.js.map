{"version":3,"sources":["./src/app/services/alert.service.ts","./src/environments/environment.ts","./src/app/pages/bienvenida/bienvenida.component.ts","./src/app/pages/bienvenida/bienvenida.component.html","./src/app/services/usuario-fire.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/app.module.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/app/pages/error/error.component.ts","./src/app/pages/error/error.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport Swal from'sweetalert2';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  \n  public reenvioEmail:boolean = false;\n\n  constructor() { }\n\n  async mostrarAlertaConfirmacionEmail(mensaje:string,titulo:string,mensajeConfirmed:string){\n    const result = await Swal.fire({\n      title: titulo,\n      text: mensaje,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Reenviar email de verificación'\n    });\n    if (result.isConfirmed) {\n      Swal.fire(\n        'Enviado!',\n        mensajeConfirmed,\n        'success'\n      );\n      this.reenvioEmail = true;\n    }\n    else {\n      this.reenvioEmail = false;\n\n    }\n    return result;\n  }\n\n  mostraAlertaSimple(mensaje:string,titulo:string, icono : any){\n    \n    Swal.fire({\n      icon: icono,\n      title: titulo,\n      text: mensaje,\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyBmoFDLXZ96OJedjV7epPm-3qbLhZc6mGE\",\n    authDomain: \"tp-clinicaonline.firebaseapp.com\",\n    projectId: \"tp-clinicaonline\",\n    storageBucket: \"tp-clinicaonline.appspot.com\",\n    messagingSenderId: \"473878406664\",\n    appId: \"1:473878406664:web:0d3585980f5d8a906213bd\",\n    measurementId: \"G-HXV0LWW47D\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n\n@Component({\n  selector: 'app-bienvenida',\n  templateUrl: './bienvenida.component.html',\n  styleUrls: ['./bienvenida.component.scss']\n})\nexport class BienvenidaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<body>\n\n\n<div >\n  <h1>CLINICA VIRTUAL</h1>\n        <img src='../../../assets/imagenes/icono-cli2.png' id='logo'>\n        <p class='sub' >Bienvenido a la clinica virtual, por favor inicie sesión para ingresar al portal o registre una cuenta en caso de no tener una.</p>\n        <p class='botones' >\n          <a [routerLink]=\"['/ingresar/login']\" class=\"btn btn-success\" id=\"btnLog\">INICIAR SESIÓN</a>\n          <a [routerLink]=\"['/ingresar/register']\" class=\"btn btn-info\" id=btnReg>REGISTRARSE</a>\n        </p>\n</div>\n \n\n\n</body>","import { Injectable } from '@angular/core';\nimport {Especialidad} from '../clases/especialidad';\nimport {AngularFirestore,AngularFirestoreCollection} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { Usuario } from '../clases/usuario';\nimport { Paciente } from '../clases/paciente';\nimport { Especialista } from '../clases/especialista';\nimport { AngularFireStorage } from '@angular/fire/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioFireService {\n\n  \n  constructor(public db : AngularFirestore, private storage : AngularFireStorage) {\n   \n  }\n\n  public crearUsuario(collection: string, data: any) : any\n  {    \n     return this.db.collection(collection).add(data);\n  }\n  \n  public obtenerPorId(coleccion:string,id:string) : any\n  {\n     return this.db.collection(coleccion).doc(id).snapshotChanges();\n  }\n\n  public obtenerTodos(collection : string) : AngularFirestoreCollection<any>\n  {\n    return this.db.collection(collection);\n  }\n\n  public actualizar(collection:string, data:any,id:string) : any\n  {\n     return this.db.collection(collection).doc(id).set(data);\n  }\n\n  public eliminar(collection:string, data:any,id:string) : any\n  {\n     return this.db.collection(collection).doc(id).delete();\n  }\n\n\n  public buscarUsuario(collection:string,usuario: Usuario) : any\n  {\n    return this.db.collection(collection, ref => ref.where(\"email\", \"==\", usuario.email).where(\"password\", \"==\", usuario.password));\n  } \n\n  // public filtrarEspecialistas(collection:string,e1: string) : AngularFirestoreCollection<any>\n  // {\n  //   return this.db.collection(collection, ref => ref.where('especialidad', \"==\", e1));\n  // } \n  \n\n  getAllFiles() : any\n  {\n    let retorno = this.storage.ref('fotosPerfil/').listAll();\n    return retorno;\n  }\n\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Tp-ClinicaOnline';\n}\n","\n<router-outlet></router-outlet>\n\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take, map, tap } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authSvc: AuthService, private router: Router)\n  { }\n\n   canActivate(\n     route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      return this.authSvc.afAuth.authState.pipe(take(1)).pipe(map(authState => !!authState)).pipe(tap(auth => {\n        if(!auth){\n          this.router.navigate(['/ingresar/login'])\n        }\n      }));\n    }\n   \n  \n \n\n \n  \n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from 'src/environments/environment';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\nimport { BienvenidaComponent } from './pages/bienvenida/bienvenida.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ErrorComponent } from './pages/error/error.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BienvenidaComponent,\n    ErrorComponent,\n\n    \n    \n \n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    HttpClientModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  \n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Usuario } from '../clases/usuario';\nimport { UsuarioFireService} from './usuario-fire.service';\nimport { AlertService } from './alert.service';\nimport { Especialista } from '../clases/especialista';\nimport { Paciente } from '../clases/paciente';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { take, map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  public especialistas: Especialista[] = [];\n  public emailVerificado: boolean;\n  logueado : boolean = false;\n \n \n\n  constructor(public afAuth : AngularFireAuth, private authSvc : AngularFireDatabase,private alertas : AlertService ,private router : Router, private usuarioSvc : UsuarioFireService) \n  {\n    \n  }\n\n\n\n\n   async sendEmailVerification() \n   {\n      await (await this.afAuth.currentUser).sendEmailVerification();\n   }\n\n\n   tipoUsuario(coleccion:string,email : string)\n   {\n    \n     let detener : boolean = false;\n     let especialistaHabilitado: boolean = false;\n\n     this.usuarioSvc.obtenerTodos(coleccion).snapshotChanges().pipe(take(1)).subscribe(snap=>{ //(pipe(take(1))) hace que no me lo traiga repetidas veces\n      snap.forEach((response):any=>{\n\n      let usuario : any = response.payload.doc.data();\n\n       if(detener == false)\n       {\n        if(usuario.email == email)\n        {\n         \n          if(coleccion == 'especialistas')\n          {\n            especialistaHabilitado = usuario.aprobado;\n          }\n\n          detener = true;\n        } \n       }\n      })\n\n      if(detener == true)\n      {\n        if(coleccion == 'administradores'){\n          this.router.navigateByUrl('home/' + 'admin');\n        }\n        else\n        {\n          if(coleccion == 'especialistas' && especialistaHabilitado == true)\n          {\n             this.router.navigateByUrl('home/' + 'especialista');\n           \n          }\n          else\n          {\n            if(coleccion == 'especialistas' && especialistaHabilitado == false)\n            {\n              this.alertas.mostraAlertaSimple('Su cuenta aun no fue habilitada por un administrador', 'Acceso Denegado', 'error');\n            }\n            else\n            {\n              if(coleccion = 'pacientes')\n              {\n                this.router.navigateByUrl('home/' + 'paciente')\n              }\n            }\n            \n          }\n        }\n        \n      }\n    })\n\n   }\n  \n\n\n   SignIn(email: string, password:string) {\n    \n    return new Promise((resolve, rejected) => {\n      this.afAuth.signInWithEmailAndPassword(email, password).then(response => {\n\n        if(response ) //&& response.user.emailVerified \n        {\n          \n          this.tipoUsuario('administradores',response.user.email);\n          this.tipoUsuario('especialistas',response.user.email);\n          this.tipoUsuario('pacientes',response.user.email);\n         \n        }\n        else\n        {\n          this.alertas.mostrarAlertaConfirmacionEmail('Por favor verifique su correo para ingresar','Correo no verificado','Se ha reenviado la verificacion de correo');\n          if(this.alertas.reenvioEmail == true)\n          {\n            this.sendEmailVerification();\n          }\n        }\n      \n        resolve(response);\n\n      }, (error: any) => {\n        console.log(error);\n        switch (error.code) {\n          case \"auth/user-not-found\":\n            rejected(\"El usuario no existe\");\n            this.alertas.mostraAlertaSimple(\"El usuario no existe!\", \"Error!\",'question');\n            break;\n          case \"auth/invalid-email\":\n            rejected(\"email invalido\");\n            this.alertas.mostraAlertaSimple(\"Correo invalido, intente nuevamente\", \"Error!\",'error');\n            break;\n          case \"auth/wrong-password\":\n            rejected(\"clave incorrecta\");\n            this.alertas.mostraAlertaSimple(\"Contraseña incorrecta, intente nuevamente\", \"Error!\",'error');\n            break;\n          default:\n            rejected(\"ERROR\");\n            break;\n        }\n      });\n\n    });\n\n  }\n\n  async desloguear(){\n    \n    await this.afAuth.signOut();\n    this.router.navigateByUrl('ingresar/login');\n  }\n\n   Register(email:string,password:string, displayName : string) {\n    return new Promise<any>((resolve, rejected) => {\n      this.afAuth.createUserWithEmailAndPassword(email, password).then((response: any) => {\n\n        response.user.updateProfile({displayName: displayName});\n        \n        resolve(response);\n      }, (error: any) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n            rejected(\"Corre invalido\");\n            this.alertas.mostraAlertaSimple(\"Correo Invalido, intente nuevamente\", 'Error!','error');\n            break;\n          case \"auth/email-already-in-use\":\n            rejected(\"Correo ya registrado\");\n            this.alertas.mostraAlertaSimple(\"El correo ingresado ya se encuentra registrado\", 'Lo sentimos','warning');\n            break;\n          default:\n            rejected(\"ERROR\");\n            break;\n        }\n      });\n    });\n  }\n\n  GetCurrentUser() : any {\n    return this.afAuth.currentUser;\n\n\n  }\n \n  ChequearLogueado(){\n    this.afAuth.authState.subscribe(res=>{\n      if(res && res.uid){\n        this.logueado = true;\n      }\n      else{\n        this.logueado = false;\n      }\n    });\n    return this.logueado;\n  }\n\n\n  \n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './guards/admin.guard';\nimport { AuthGuard } from './guards/auth.guard';\nimport { BienvenidaComponent } from './pages/bienvenida/bienvenida.component';\n\n\n\nconst routes: Routes = [\n  {path: 'bienvenida', component: BienvenidaComponent},\n  {path: 'ingresar', loadChildren: () => import('./pages/ingresar/ingresar.module').then(m => m.IngresarModule) },\n  {path: 'home', loadChildren: () => import('./pages/home/home.module').then(m => m.HomeModule),canActivate: [AuthGuard] },\n  {path: 'admin', loadChildren: () => import('./pages/admin/admin.module').then(m => m.AdminModule),canActivate: [AuthGuard] },\n  {path: 'paciente', loadChildren: () => import('./pages/paciente/paciente.module').then(m => m.PacienteModule) },\n  {path: 'especialista', loadChildren: () => import('./pages/especialista/especialista.module').then(m => m.EspecialistaModule) },\n  {\n    path: '',\n    redirectTo: 'bienvenida',\n    pathMatch: 'full',\n  },\n  { path: '**', loadChildren: () => import('./pages/error/error.module').then(m => m.ErrorModule) },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<body>\n\n<div class=\"error-container\">\n  <h1>404 ruta no encontrada</h1>\n  <p class=\"return\">Volver a  <a href=\"/\">Clinica Virtual</a></p>\n</div>\n\n</body>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}