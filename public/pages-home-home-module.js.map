{"version":3,"sources":["./src/app/pages/home/home.module.ts","./src/app/pages/home/home-routing.module.ts","./src/app/pages/home/home-admin/admin-especialistas/admin-especialistas.component.html","./src/app/pages/home/home-admin/admin-especialistas/admin-especialistas.component.ts","./src/app/pages/home/home-admin/admin-info/admin-info.component.html","./src/app/pages/home/home-admin/admin-info/admin-info.component.ts","./src/app/pages/home/home-admin/admin-register/admin-register.component.ts","./src/app/pages/home/home-admin/admin-register/admin-register.component.html","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/pages/home/home-admin/home-admin.component.ts","./src/app/pages/home/home-admin/home-admin.component.html"],"names":[],"mappings":"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","file":"pages-home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {  MatSelectModule } from '@angular/material/select';\n\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeAdminComponent } from './home-admin/home-admin.component';\nimport { NavbarComponent } from '../../components/navbar/navbar.component';\nimport { AdminRegisterComponent } from './home-admin/admin-register/admin-register.component';\nimport { AdminEspecialistasComponent } from './home-admin/admin-especialistas/admin-especialistas.component';\nimport { AdminInfoComponent } from './home-admin/admin-info/admin-info.component';\n\n@NgModule({\n  declarations: [\n    HomeAdminComponent,\n    NavbarComponent,\n    AdminRegisterComponent,\n    AdminEspecialistasComponent,\n    AdminInfoComponent,\n    \n  ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule\n    \n  ]\n})\nexport class HomeModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from 'src/app/guards/admin.guard';\nimport { AdminEspecialistasComponent } from './home-admin/admin-especialistas/admin-especialistas.component';\nimport { AdminInfoComponent } from './home-admin/admin-info/admin-info.component';\nimport { AdminRegisterComponent } from './home-admin/admin-register/admin-register.component';\nimport { HomeAdminComponent } from './home-admin/home-admin.component';\n\nconst routes: Routes = [\n  {path: 'admin', component: HomeAdminComponent},\n  { path: 'admin-registro', component: AdminRegisterComponent},\n  { path: 'admin-especialista', component: AdminEspecialistasComponent},\n  { path: 'admin-info', component: AdminInfoComponent},\n  {path: '', redirectTo:'admin', pathMatch:'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n\n\n","<body>\n<app-navbar></app-navbar>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12 mx-auto mt-3\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"seleccion\">\n                        <button  class=\"btn btn-info btn-sm\" [routerLink]=\"['/home/admin']\" >🡰</button>\n                        <table class=\"table table-hover\">\n                            <thead>\n                              <tr>\n                                <th scope=\"col\">Nombre</th>\n                                <th scope=\"col\">Correo</th>\n                                <th scope=\"col\">DNI</th>\n                                <th scope=\"col\">Especialidades</th>\n                                <th scope=\"col\"></th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr class=\"table-active\" *ngFor=\"let especialista of listado\">\n                                <th scope=\"row\">{{especialista.nombre}} {{especialista.apellido}}</th>\n                                <td>{{especialista.email}}</td>\n                                <td>{{especialista.dni}}</td>\n                                <td>{{especialista.especialidad}}</td>\n                                <td><button class='btn btn-success btn-sm' (click)=\"aprobar(especialista)\">Aprobar</button></td>\n                              </tr>\n                            </tbody>\n                          </table>\n                    </div>\n                </div>\n           </div>\n        </div>\n    </div>\n</div>\n            \n            \n        \n</body>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { Especialista } from 'src/app/clases/especialista';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { UsuarioFireService } from 'src/app/services/usuario-fire.service';\n\n@Component({\n  selector: 'app-admin-especialistas',\n  templateUrl: './admin-especialistas.component.html',\n  styleUrls: ['./admin-especialistas.component.scss']\n})\nexport class AdminEspecialistasComponent implements OnInit {\n\n\n\n  user : any;\n  listado: Especialista[];\n  listadoId = [];\n\n  constructor(public authSvc:AuthService, public router:Router, public db : AngularFirestore, public especialidadSvc : UsuarioFireService)\n  {\n    let collection = this.db.collection('especialistas', ref => { return ref.where('aprobado', '==', false)})\n     let observable = collection.valueChanges()\n     observable.subscribe((datos:Especialista[])=>this.listado = datos)\n  }\n\n\n  aprobar(especialista:Especialista){\n    especialista.aprobado = true;\n    // this.db.collection('especialistas').doc(especialista.email).update(especialista);\n\n    this.listadoId.forEach(espe =>{\n\n      if(espe.email == especialista.email)\n      {\n        this.especialidadSvc.actualizar('especialistas', especialista, espe.id);\n      }\n      \n      \n    });\n\n          \n\n    \n\n  }\n\n\n  ngOnInit(): void {\n    this.especialidadSvc.obtenerTodos('especialistas').snapshotChanges().subscribe(espeSnap=>{\n      espeSnap.forEach((response):any =>{\n        let esp : any = response.payload.doc.data();\n        esp.id = response.payload.doc.id;\n      \n        \n          this.listadoId.push(esp);\n        \n        \n\n       \n      });\n    });\n  }\n\n}\n","<body>\n    <app-navbar></app-navbar>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-12 mx-auto mt-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <div class=\"seleccion\">\n                            <button  class=\"btn btn-info btn-sm\" [routerLink]=\"['/home/admin']\" >🡰</button><br><br>\n                            <div class=\"form-group\">\n                                <select class=\"form-select\" id=\"selectTipo\" [(ngModel)]=\"tipo\">  \n                                  <option selected value='pacientes'>Pacientes</option>\n                                  <option value='especialistas'>Especialistas</option>\n                                  <option value='administradores'>Administradores</option>\n                                </select>\n                              </div>\n                            <table class=\"table table-hover\">\n                                <ng-container *ngIf=\"tipo=='pacientes'\">\n                                <thead >\n                                  <tr>\n                                    <th scope=\"col\">Nombre</th>\n                                    <th scope=\"col\">Edad</th>\n                                    <th scope=\"col\">DNI</th>\n                                    <th scope=\"col\">Correo</th>\n                                    <th scope=\"col\">Obra Social</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr class=\"table-active\" *ngFor=\"let paciente of pacientes$ | async\">\n                                    <th scope=\"row\">{{paciente.nombre}} {{paciente.apellido}}</th>\n                                    <td>{{paciente.edad}}</td>\n                                    <td>{{paciente.dni}}</td>\n                                    <td>{{paciente.email}}</td>\n                                    <td>{{paciente.obraSocial}}</td>\n                                  </tr>\n                                </tbody>\n                                </ng-container>\n                                <ng-container *ngIf=\"tipo=='especialistas'\">\n                                    <thead >\n                                      <tr>\n                                        <th scope=\"col\">Nombre</th>\n                                        <th scope=\"col\">Edad</th>\n                                        <th scope=\"col\">DNI</th>\n                                        <th scope=\"col\">Correo</th>\n                                        <th scope=\"col\">Especialidades</th>\n                                        <th scope=\"col\">¿Aprobado?</th>\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      <tr class=\"table-active\" *ngFor=\"let especialista of especialistas$ | async\">\n                                        <th scope=\"row\">{{especialista.nombre}} {{especialista.apellido}}</th>\n                                        <td>{{especialista.edad}}</td>\n                                        <td>{{especialista.dni}}</td>\n                                        <td>{{especialista.email}}</td>\n                                        <td>{{especialista.especialidad}}</td>\n                                        <td *ngIf=\"especialista.aprobado == false\">No</td>\n                                        <td *ngIf=\"especialista.aprobado == true\">Si</td>\n                                      </tr>\n                                    </tbody>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"tipo=='administradores'\">\n                                        <thead >\n                                          <tr>\n                                            <th scope=\"col\">Nombre</th>\n                                            <th scope=\"col\">Edad</th>\n                                            <th scope=\"col\">DNI</th>\n                                            <th scope=\"col\">Correo</th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          <tr class=\"table-active\" *ngFor=\"let administrador of administradores$ | async\">\n                                            <th scope=\"row\">{{administrador.nombre}} {{administrador.apellido}}</th>\n                                            <td>{{administrador.edad}}</td>\n                                            <td>{{administrador.dni}}</td>\n                                            <td>{{administrador.email}}</td>\n                                          </tr>\n                                        </tbody>\n                                        </ng-container>\n                              </table>\n                        </div>\n                    </div>\n               </div>\n            </div>\n        </div>\n    </div>\n                \n                \n            \n    </body>\n    \n    ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { Especialista } from 'src/app/clases/especialista';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { UsuarioFireService } from 'src/app/services/usuario-fire.service';\nimport { Paciente } from 'src/app/clases/paciente';\nimport { Observable } from 'rxjs';\nimport { Administrador } from 'src/app/clases/administrador';\n\n@Component({\n  selector: 'app-admin-info',\n  templateUrl: './admin-info.component.html',\n  styleUrls: ['./admin-info.component.scss']\n})\nexport class AdminInfoComponent implements OnInit {\n\n  pacientes$: Observable<Paciente[]>;\n  especialistas$: Observable<Especialista[]>;\n  administradores$: Observable<Administrador[]>;\n  tipo : string = 'pacientes';\n\n  constructor(private usuariosSvc : UsuarioFireService)\n  {\n    this.pacientes$ = this.usuariosSvc.obtenerTodos('pacientes').valueChanges();\n    this.especialistas$ = this.usuariosSvc.obtenerTodos('especialistas').valueChanges();\n    this.administradores$ = this.usuariosSvc.obtenerTodos('administradores').valueChanges();\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UsuarioFireService } from '../../../../services/usuario-fire.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Especialidad } from 'src/app/clases/especialidad';\nimport { Paciente } from 'src/app/clases/paciente';\nimport { Administrador } from './../../../../clases/administrador';\nimport { Observable } from 'rxjs';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { Especialista } from 'src/app/clases/especialista';\nimport { NgxSpinnerService} from 'ngx-spinner';\nimport firebase from 'firebase/app';\nimport { AlertService } from 'src/app/services/alert.service';\n\n@Component({\n  selector: 'app-admin-register',\n  templateUrl: './admin-register.component.html',\n  styleUrls: ['./admin-register.component.scss']\n})\nexport class AdminRegisterComponent implements OnInit {\n\n  flag: boolean = false;\n  paciente : Paciente = new Paciente();\n  especialidades : Especialidad = new Especialidad();\n  admin : Administrador = new Administrador();\n  especialista: Especialista = new Especialista();\n  especialidadFlag : boolean = false;\n\n\n  ocultarBtn : boolean = false;\n  listaEspecialidad = [];\n  especialidadSeleccionada : string;\n\n  spinnerFlag:boolean = true;\n  tipo:string = 'Seleccione tipo de alta';\n\n  public foto1: any;\n  public foto2: any;\n  public fotoCargada1: any;\n  public fotoCargada2: any;\n \n\n\n  public formEspecialista!: FormGroup;\n  public formPaciente! : FormGroup;\n  public formAdministrador! : FormGroup;\n\n  especialidadesFire$: Observable<Especialidad[]>;\n\n  constructor(private authSvc : AuthService,private router: Router,private fireSvc: UsuarioFireService,private fb:FormBuilder,private storage: AngularFireStorage, private spinner : NgxSpinnerService, private alerts : AlertService) \n  {\n      this.especialidadesFire$ = this.fireSvc.obtenerTodos('especialidades').valueChanges();\n      \n      \n  }\n\n  \n \n  \n\n   ngOnInit(): void {\n\n\n    this.formPaciente = this.fb.group(\n      {\n      'nombre': ['',[Validators.required]],\n      'apellido': ['',Validators.required],\n      'edad': ['',[Validators.required,Validators.min(18),Validators.max(99)]],\n      'dni': ['',[Validators.required,Validators.min(11111111),Validators.max(99999999)]],\n      'obraSocial': ['', Validators.required],\n      'email': ['',[Validators.required, Validators.email,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      'password': ['',[Validators.required, Validators.minLength(6)]],\n      'fotoPerfilUno': ['',Validators.required],\n      'fotoPerfilDos': ['',Validators.required],\n\n      }\n    )\n\n    this.formEspecialista = this.fb.group({\n      'nombre': ['',[Validators.required]],\n      'apellido': ['',Validators.required],\n      'edad': ['',[Validators.required,Validators.min(18),Validators.max(99)]],\n      'dni': ['',[Validators.required,Validators.min(11111111),Validators.max(99999999)]],\n      'email': ['',[Validators.required, Validators.email,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      'password': ['',[Validators.required,Validators.minLength(6)]],\n      'fotoPerfilUno': ['',Validators.required],\n      'especialidad': ['', Validators.required],\n      'especialidadInput': [''],\n    \n    });\n\n    this.formAdministrador = this.fb.group({\n      'nombre': ['',[Validators.required]],\n      'apellido': ['',Validators.required],\n      'edad': ['',[Validators.required,Validators.min(18),Validators.max(99)]],\n      'dni': ['',[Validators.required,Validators.min(11111111),Validators.max(99999999)]],\n      'email': ['',[Validators.required, Validators.email,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      'password': ['',[Validators.required,Validators.minLength(6)]],\n      'fotoPerfilUno': ['',Validators.required],\n     \n    });\n  }\n\n  \n\n\n  \n  async register()\n  {\n    \n    if(this.tipo == \"paciente\")\n    {\n      this.paciente.nombre = this.formPaciente.get('nombre').value;\n      this.paciente.apellido = this.formPaciente.get('apellido').value;\n      this.paciente.edad = this.formPaciente.get('edad').value;\n      this.paciente.dni = this.formPaciente.get('dni').value;\n      this.paciente.email = this.formPaciente.get('email').value;\n      this.paciente.password = this.formPaciente.get('password').value;\n      this.paciente.obraSocial = this.formPaciente.get('obraSocial').value;      \n      \n      this.paciente.esAdmin = false;\n\n      try\n      {\n          this.authSvc.Register(this.paciente.email,this.paciente.password, this.paciente.nombre).then(response=>{\n           \n          this.mostrarSpinner(1500);  \n          this.paciente.uid = response.user.uid;\n          let id = response.user.email;\n               \n          if(this.foto1 && this.foto2)\n          {\n            const filePath = `/pacientes/${id}/perfil1.png`;\n            const ref = this.storage.ref(filePath);\n            const taks = this.storage.upload(filePath, this.foto1).then(()=>{\n\n             const filePath2 = `/pacientes/${id}/perfil2.png`;\n              const ref2 = this.storage.ref(filePath2);\n\n              const taks2 = this.storage.upload(filePath2, this.foto2).then(()=>{\n\n                 let storages = firebase.storage();\n                 let storageRef = storages.ref();\n                 let spaceRef = storageRef.child(filePath);\n\n                 let storages2 = firebase.storage();\n                 let storageRef2 = storages2.ref();\n                 let spaceRef2 = storageRef2.child(filePath2);\n\n                 spaceRef.getDownloadURL().then(url=>{\n                   this.fotoCargada1 = url;\n                   this.fotoCargada1 = `${this.fotoCargada1}`;\n\n                   console.log(this.fotoCargada1)\n\n\n                   spaceRef2.getDownloadURL().then((url) => {\n                   this.fotoCargada2 = url;\n                   this.fotoCargada2 = `${this.fotoCargada2}`;\n\n                   console.log(this.fotoCargada2);\n\n                   this.paciente.fotoPerfilUno = this.fotoCargada1;\n                   this.paciente.fotoPerfilDos = this.fotoCargada2;\n                   this.fireSvc.crearUsuario('pacientes',JSON.parse(JSON.stringify(this.paciente)));\n\n                   \n                   this.alerts.mostraAlertaSimple('Se ha registrado exitosamente!','Cuenta Registrada','success');\n                   this.formPaciente.reset();\n                   \n                 });\n                 });\n               });\n            });\n            \n          }\n        });\n        \n       \n      }\n       catch(error)\n       {\n         console.log(error);\n        \n       }\n      \n\n    }\n    else\n    {\n      if(this.tipo == \"especialista\")\n      {\n        this.especialista.nombre = this.formEspecialista.get('nombre').value;\n        this.especialista.apellido = this.formEspecialista.get('apellido').value;\n        this.especialista.edad = this.formEspecialista.get('edad').value;\n        this.especialista.dni = this.formEspecialista.get('dni').value;\n        this.especialista.email = this.formEspecialista.get('email').value;\n        this.especialista.password = this.formEspecialista.get('password').value;\n        this.especialista.fotoPerfil = this.formEspecialista.get('fotoPerfilUno').value;\n        this.especialista.especialidad = this.formEspecialista.get('especialidad').value;\n        this.especialista.aprobado = true; // aprobado directamente porque lo registra un admin.\n        this.especialista.esAdmin = false;\n\n         try\n         {\n          this.authSvc.Register(this.especialista.email,this.especialista.password,this.paciente.nombre).then(response=>{\n           \n            this.mostrarSpinner(1500);  \n            this.especialista.uid = response.user.uid;\n            let id = response.user.email;\n                 \n            if(this.foto1)\n            {\n              const filePath = `/especialistas/${id}/perfil.png`;\n              const ref = this.storage.ref(filePath);\n              const taks = this.storage.upload(filePath, this.foto1).then(()=>{\n  \n                let storages = firebase.storage();\n                let storageRef = storages.ref();\n                let spaceRef = storageRef.child(filePath);\n\n                spaceRef.getDownloadURL().then(url=>{\n                  this.fotoCargada1 = url;\n                  this.fotoCargada1 = `${this.fotoCargada1}`;\n\n                  console.log(this.fotoCargada1);\n\n                  this.especialista.fotoPerfil = this.fotoCargada1;\n                \n                   this.fireSvc.crearUsuario('especialistas',JSON.parse(JSON.stringify(this.especialista)));\n\n                   this.authSvc.sendEmailVerification();\n                   this.alerts.mostraAlertaSimple('Se ha registrado exitosamente!','Cuenta Registrada','success');\n                   this.formEspecialista.reset();\n\n                });\n      \n              });\n              \n            }\n          });\n\n         }\n         catch(error)\n         {\n           console.log(error);\n          \n         }\n\n      }\n      else\n      {\n        if(this.tipo == \"administrador\")\n        {\n          this.admin.nombre = this.formAdministrador.get('nombre').value;\n          this.admin.apellido = this.formAdministrador.get('apellido').value;\n          this.admin.edad = this.formAdministrador.get('edad').value;\n          this.admin.dni = this.formAdministrador.get('dni').value;\n          this.admin.email = this.formAdministrador.get('email').value;\n          this.admin.password = this.formAdministrador.get('password').value;\n          this.admin.fotoPerfil = this.formAdministrador.get('fotoPerfilUno').value;\n          this.admin.esAdmin = true;\n\n          try\n         {\n          this.authSvc.Register(this.admin.email,this.admin.password,this.admin.nombre).then(response=>{\n           \n            this.mostrarSpinner(1500);  \n            this.admin.uid = response.user.uid;\n            let id = response.user.email;\n                 \n            if(this.foto1)\n            {\n              const filePath = `/administradores/${id}/perfil.png`;\n              const ref = this.storage.ref(filePath);\n              const taks = this.storage.upload(filePath, this.foto1).then(()=>{\n  \n                let storages = firebase.storage();\n                let storageRef = storages.ref();\n                let spaceRef = storageRef.child(filePath);\n\n                spaceRef.getDownloadURL().then(url=>{\n                  this.fotoCargada1 = url;\n                  this.fotoCargada1 = `${this.fotoCargada1}`;\n\n                  console.log(this.fotoCargada1);\n\n                  this.admin.fotoPerfil = this.fotoCargada1;\n                \n                   this.fireSvc.crearUsuario('administradores',JSON.parse(JSON.stringify(this.admin)));\n\n                   this.alerts.mostraAlertaSimple('Se ha registrado exitosamente!','Cuenta Registrada','success');\n                   this.formAdministrador.reset();\n\n                });\n      \n              });\n              \n            }\n          });\n\n         }\n         catch(error)\n         {\n           console.log(error);\n          \n         }\n\n\n        }\n      }\n    }\n  \n  }\n\n\n  \n  \n\n  agregarEspecialidad(){\n    let espAux = new Especialidad();\n    let minus : string = this.formEspecialista.get('especialidadInput').value;\n    let nombre : string;\n    \n    nombre = minus.toLowerCase();\n    espAux.nombre = nombre.charAt(0).toUpperCase() + nombre.slice(1);\n    let existe : boolean = true;\n    \n    \n\n    this.especialidadesFire$.subscribe(esp=>{\n      esp.forEach((especialidad):any =>{\n\n        if(existe)\n        {\n         if(especialidad.nombre == espAux.nombre)\n         { \n          existe = false;\n         }\n        }\n      \n      })\n\n      if(existe != false)\n      {\n        this.fireSvc.crearUsuario('especialidades',JSON.parse(JSON.stringify(espAux)));\n        console.log(\"Especialidad Agregada\");\n        \n      }\n    })\n  \n    \n  }\n  \n \n  mostrarAgregarEspecialidad()\n  {\n    this.especialidadFlag = true;\n  }\n\n\n   cambiarTipo(tipo : string)\n   {\n     if(tipo == 'paciente' )\n     {\n       this.tipo = 'paciente';\n       this.ocultarBtn = true;\n       this.formEspecialista.reset();\n     }\n     else\n     {\n       if(tipo=='especialista')\n       {\n         this.tipo = 'especialista';\n         this.ocultarBtn = true;\n         this.formPaciente.reset();\n       }\n       else\n       {\n         if(tipo == 'administrador')\n         {\n           this.tipo = 'administrador';\n           this.formPaciente.reset();\n           this.formEspecialista.reset();\n           this.ocultarBtn = true;\n         }\n         else\n         {\n           if(tipo == 'ninguno')\n          {\n            this.tipo=\"ninguno\";\n            this.formPaciente.reset();\n            this.formEspecialista.reset();\n            // this.formAdministrador.reset();\n            this.ocultarBtn = false;\n         }\n        }\n         \n       }\n     }\n\n     \n   }\n\n\n  \n \n  onUploadEspecialista($event) {\n    console.log($event)\n    this.foto1 = $event.target.files[0];\n\n\n  }\n\n  onUploadAdmin($event) {\n    console.log($event)\n    this.foto1 = $event.target.files[0];\n\n  }\n\n  onUploadPaciente($event, num: number) {\n\n    if (num == 1) {\n      console.log($event)\n      this.foto1 = $event.target.files[0];\n    }\n\n    else if (num == 2) {\n      console.log($event)\n      this.foto2 = $event.target.files[0];\n    }\n  }\n\n  mostrarSpinner(seg : number)\n  {\n    this.spinner.show();\n\n    setTimeout(()=>{\n      this.spinner.hide();\n    },seg);\n  }\n  \n  \n\n}\n","<body>\n<app-navbar></app-navbar>\n    <div class=container>\n        <div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-4\">\n    <div class=\"card\">\n    <div class=\"card-body\">\n             <p *ngIf=\"!ocultarBtn\">\n              <button  class=\"btnAlta btn-info \"  (click)=\"cambiarTipo('paciente')\" id=\"btnPac\">Paciente</button>\n              <button  class=\"btnAlta btn-success\"  (click)=\"cambiarTipo('especialista')\" id=\"btnEsp\" >Especialista</button>\n              <button  class=\"btnAlta btn-danger\"  (click)=\"cambiarTipo('administrador')\" id=\"btnAdm\" >Administrador</button>\n              <br>\n              <button  class=\"btn btn-secondary btn-lg\" [routerLink]=\"['/home/admin']\" >🡰</button>\n            </p>\n            <div *ngIf='ocultarBtn'>\n            <button  class=\"btn btn-info\"  (click)=\"cambiarTipo('ninguno')\" >Volver</button>\n            <br><br>\n            </div>\n        \n         <div class=\"formPacientes\" *ngIf=\"tipo === 'paciente'\" > \n            \n            <form  [formGroup]=\"formPaciente\" [hidden]=\"flag\" class=\"register-form needs-validation\" novalidate (ngSubmit)=\"register()\">\n                <div class=\"cardPacientes\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6 mb-3\">\n                           \n                            <input type=\"text\" placeholder=\"Nombre\" name=\"nombre\" class=\"form-control\" id=\"nombre\" formControlName=\"nombre\"/>\n                            <small class=\"invalid\" *ngIf=\"formPaciente.get('nombre')?.errors?.required && formPaciente.get('nombre')?.touched\">Nombre requerido</small>\n                            \n                        </div>\n                        <div class=\"col-md-6 mb-3\">\n                            <input type=\"text\" placeholder=\"Apellido\" name=\"apellido\" class=\"form-control\" id=\"apellido\" formControlName=\"apellido\"/>\n                            <small class=\"invalid\" *ngIf=\"formPaciente.get('apellido')?.errors?.required && formPaciente.get('apellido')?.touched\">Apellido requerido</small>\n                            \n                        </div>\n                    </div>\n    \n                    <div class=\"row\">\n    \n                        <div class=\"col-md-6 mb-3\">\n                            <input type=\"number\" placeholder=\"Edad\" name=\"edad\" class=\"form-control\" id=\"edad\" formControlName=\"edad\"/>\n                            <small class=\"invalid\" *ngIf=\"formPaciente.get('edad')?.errors?.required && formPaciente.get('edad')?.touched\">Edad requerida</small>\n                            <small class=\"invalid\" *ngIf=\"formPaciente.get('edad')?.errors?.min || formPaciente.get('edad')?.errors?.max && formPaciente.get('edad')?.touched\">Edad entre 18 y 99 años</small>\n    \n                        </div>\n                        <div class=\"col-md-6 mb-3\">\n                            <input type=\"number\" placeholder=\"Dni\" name=\"dni\" class=\"form-control\" id=\"dni\" formControlName=\"dni\"/>\n                            <small class=\"invalid\" *ngIf=\"formPaciente.get('dni')?.errors?.required && formPaciente.get('dni')?.touched\">Dni requerido</small>\n                            <small class=\"invalid\" *ngIf=\"formPaciente.get('dni')?.errors?.min || formPaciente.get('dni')?.errors?.max && formPaciente.get('dni')?.touched\">Dni incorrecto</small>\n    \n                        </div>\n                    </div>\n    \n                    <div class=\"form-group mb-3\">\n                        <input type=\"text\" placeholder=\"Obra Social\" name=\"obraSocial\" class=\"form-control\" id=\"obraSocial\" formControlName=\"obraSocial\" />\n                        <small class=\"invalid\" *ngIf=\"formPaciente.get('obraSocial')?.errors?.required && formPaciente.get('obraSocial')?.touched\">Obra social requerida</small>\n                    </div>\n                    <div class=\"form-group mb-3\">\n                        <input type=\"text\" placeholder=\"Correo\" name=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\"/>\n                        <small class=\"invalid\" *ngIf=\"formPaciente.get('email')?.errors?.required && formPaciente.get('email')?.touched\">Correo requerido</small>\n                    </div>\n                    <div class=\"form-group mb-3\">\n                        <input type=\"password\" placeholder=\"Contraseña\" name=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"/>\n                        <ng-container *ngIf= \"formPaciente.get('password')?.touched || formPaciente.get('password')?.dirty\" >\n                        <small class=\"invalid\" *ngIf=\"formPaciente.get('password')?.errors?.required \">Contraseña requerida</small>\n                        <small class=\"invalid\" *ngIf=\"formPaciente.get('password')?.errors?.minlength\">6 caracteres como minimo</small>\n                        </ng-container>\n                    </div>\n                    <div class=\"form-group mb-3\">\n                        <label for=\"formFile\" class=\"form-label mt-1\">Seleccione foto de perfil Uno</label>\n                        <input type=\"file\" class=\"form-control\" id=\"fotoPerfilUno\" formControlName=\"fotoPerfilUno\"  (change)=\"onUploadPaciente($event, 1)\">\n                        <small class=\"invalid\" *ngIf=\"!subirArchivos\">{{mensajeSubida}}</small>\n                    </div>\n                    <div class=\"form-group mb-3\">\n                        <label for=\"formFile\" class=\"form-label mt-1\">Seleccione foto de perfil Dos</label>\n                        <input type=\"file\" class=\"form-control\" id=\"fotoPerfilDos\" formControlName=\"fotoPerfilDos\"  (change)=\"onUploadPaciente($event, 2)\">\n                        <small class=\"invalid\" *ngIf=\"!subirArchivos\">{{mensajeSubida}}</small>\n                    </div>\n                </div>\n                <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\" [disabled]=\"formPaciente.invalid\">Crear cuenta</button>\n            </form>\n            </div>\n    \n        <div class=\"formEspecialistas\"  *ngIf=\"tipo === 'especialista'\">\n            <form  [formGroup]=\"formEspecialista\" [hidden]=\"flag\" class=\"register-form needs-validation\" novalidate (ngSubmit)=\"register()\"> \n                <div class=\"cardEspecialistas\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6 mb-3\">\n                           \n                            <input type=\"text\" placeholder=\"Nombre\" name=\"nombre\" class=\"form-control\" id=\"nombre\" formControlName=\"nombre\"/>\n                            <small class=\"invalid\" *ngIf=\"formEspecialista.get('nombre')?.errors?.required && formEspecialista.get('nombre')?.touched\">Nombre requerido</small>\n                            \n                        </div>\n                        <div class=\"col-md-6 mb-3\">\n                            <input type=\"text\" placeholder=\"Apellido\" name=\"apellido\" class=\"form-control\" id=\"apellido\" formControlName=\"apellido\"/>\n                            <small class=\"invalid\" *ngIf=\"formEspecialista.get('apellido')?.errors?.required && formEspecialista.get('apellido')?.touched\">Apellido requerido</small>\n                            \n                        </div>\n                    </div>\n    \n                    <div class=\"row\">\n    \n                        <div class=\"col-md-6 mb-3\">\n                            <input type=\"number\" placeholder=\"Edad\" name=\"edad\" class=\"form-control\" id=\"edad\" formControlName=\"edad\"/>\n                            <small class=\"invalid\" *ngIf=\"formEspecialista.get('edad')?.errors?.required && formEspecialista.get('edad')?.touched\">Edad requerida</small>\n                        </div>\n                        <div class=\"col-md-6 mb-3\">\n                            <input type=\"number\" placeholder=\"Dni\" name=\"dni\" class=\"form-control\" id=\"dni\" formControlName=\"dni\"/>\n                            <small class=\"invalid\" *ngIf=\"formEspecialista.get('dni')?.errors?.required && formEspecialista.get('dni')?.touched\">Dni requerido</small>\n                        </div>\n                    </div>\n    \n                    <h5 class=\"mb-3\">Especialidad</h5>\n                    <div class=\"row\"  >\n                        <div class=\"form-group mb-3\" >\n                                <mat-form-field>\n                                    <mat-label >Seleccionar especialidades</mat-label>\n                                    <mat-select matNativeControl  class=\"espeSelect\" multiple=\"\" formControlName=\"especialidad\" >\n        \n                                        <mat-option *ngFor=\"let especialidad of especialidadesFire$ | async\" [value]=\"especialidad.nombre\">{{especialidad.nombre}}</mat-option> \n                                        \n                                    </mat-select>\n                                </mat-form-field>\n                                <br>\n                            <button class=\"btn btn-primary\" *ngIf=\"!especialidadFlag\" (click)=\"mostrarAgregarEspecialidad()\">Agregar especialidad</button>\n                            <div class=\"mas\" *ngIf=\"especialidadFlag\">\n                                <input  type=\"text\" placeholder=\"Ingrese especialidad nueva\" name=\"especialidadInput\" class=\"form-control\" id=\"especialidadInput\" [(ngModel)]=\"especialidadInput\" formControlName=\"especialidadInput\"/>\n                                <button type=\"button\" class=\"btn btn-primary\"  (click)=\"agregarEspecialidad()\" [disabled]=\"!especialidadInput\">Agregar</button>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"form-group mb-3\">\n                        <input type=\"text\" placeholder=\"Correo\" name=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\"/>\n                        <small class=\"invalid\" *ngIf=\"formEspecialista.get('email')?.errors?.required && formEspecialista.get('email')?.touched\">Correo requerido</small>\n                    </div>\n                    <div class=\"form-group mb-3\">\n                        <input type=\"password\" placeholder=\"Contraseña\" name=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"/>\n                        <ng-container *ngIf= \"formEspecialista.get('password')?.touched || formEspecialista.get('password')?.dirty\" >\n                        <small class=\"invalid\" *ngIf=\"formEspecialista.get('password')?.errors?.required && formEspecialista.get('password')?.touched\">Contraseña requerida</small>\n                        <small class=\"invalid\" *ngIf=\"formEspecialista.get('password')?.errors?.minlength && formEspecialista.get('password')?.touched || formEspecialista.get('password')?.dirty\">6 caracteres como minimo</small>\n                        </ng-container>\n                    </div>\n                    <div class=\"form-group mb-3\">\n                        <label for=\"formFile\" class=\"form-label mt-1\">Seleccione foto de perfil</label>\n                        <input type=\"file\" class=\"form-control\" id=\"fotoPerfilUno\" formControlName=\"fotoPerfilUno\" (change)=\"onUploadEspecialista($event)\">\n                        <small class=\"invalid\" *ngIf=\"!subirArchivos\">{{mensajeSubida}}</small>\n                    </div>\n                </div>\n                <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\"  [disabled]=\"formEspecialista.invalid\">Crear cuenta</button>\n            </form>\n        </div>\n    \n            \n    \n         <div class=\"formAdministrador\"  *ngIf=\"tipo === 'administrador'\">\n            <form  [formGroup]=\"formAdministrador\" [hidden]=\"flag\" class=\"register-form needs-validation\" novalidate (ngSubmit)=\"register()\">\n                <div class=\"cardAdministradores\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6 mb-3\">\n                           \n                            <input type=\"text\" placeholder=\"Nombre\" name=\"nombre\" class=\"form-control\" id=\"nombre\" formControlName=\"nombre\"/>\n                            <small class=\"invalid\" *ngIf=\"formAdministrador.get('nombre')?.errors?.required && formAdministrador.get('nombre')?.touched\">Nombre requerido</small>\n                            \n                        </div>\n                        <div class=\"col-md-6 mb-3\">\n                            <input type=\"text\" placeholder=\"Apellido\" name=\"apellido\" class=\"form-control\" id=\"apellido\" formControlName=\"apellido\"/>\n                            <small class=\"invalid\" *ngIf=\"formAdministrador.get('apellido')?.errors?.required && formAdministrador.get('apellido')?.touched\">Apellido requerido</small>\n                            \n                        </div>\n                    </div>\n    \n                    <div class=\"row\">\n    \n                        <div class=\"col-md-6 mb-3\">\n                            <input type=\"number\" placeholder=\"Edad\" name=\"edad\" class=\"form-control\" id=\"edad\" formControlName=\"edad\"/>\n                            <small class=\"invalid\" *ngIf=\"formAdministrador.get('edad')?.errors?.required && formAdministrador.get('edad')?.touched\">Edad requerida</small>\n                            <small class=\"invalid\" *ngIf=\"formAdministrador.get('edad')?.errors?.min || formAdministrador.get('edad')?.errors?.max && formGroup.get('edad')?.touched\">Edad entre 18 y 99 años</small>\n    \n                        </div>\n                        <div class=\"col-md-6 mb-3\">\n                            <input type=\"number\" placeholder=\"Dni\" name=\"dni\" class=\"form-control\" id=\"dni\" formControlName=\"dni\"/>\n                            <small class=\"invalid\" *ngIf=\"formAdministrador.get('dni')?.errors?.required && formAdministrador.get('dni')?.touched\">Dni requerido</small>\n                            <small class=\"invalid\" *ngIf=\"formAdministrador.get('dni')?.errors?.min || formAdministrador.get('dni')?.errors?.max && formAdministrador.get('dni')?.touched\">Dni incorrecto</small>\n    \n                        </div>\n                    </div>\n                    <div class=\"form-group mb-3\">\n                        <input type=\"text\" placeholder=\"Correo\" name=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\"/>\n                        <small class=\"invalid\" *ngIf=\"formAdministrador.get('email')?.errors?.required && formAdministrador.get('email')?.touched\">Correo requerido</small>\n                        <small class=\"invalid\" *ngIf=\"formAdministrador.get('email')?.errors?.email && formAdministrador.get('email')?.touched\">Escriba un mail correcto</small>\n                    </div>\n                    <div class=\"form-group mb-3\"> \n                        <input type=\"password\" placeholder=\"Contraseña\" name=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"/>\n                        <ng-container *ngIf= \"formAdministrador.get('password')?.touched || formAdministrador.get('password')?.dirty\" >\n                            <small class=\"invalid\" *ngIf=\"formAdministrador.get('password')?.errors?.required \">Contraseña requerida</small>\n                            <small class=\"invalid\" *ngIf=\"formAdministrador.get('password')?.errors?.minlength\">6 caracteres como minimo</small>\n                        </ng-container>\n                    </div>\n                    <div class=\"form-group mb-3\">\n                        <label for=\"formFile\" class=\"form-label mt-1\">Seleccione foto de perfil</label>\n                        <input type=\"file\" class=\"form-control\" id=\"fotoPerfilUno\" formControlName=\"fotoPerfilUno\" (change)=\"onUploadAdmin($event)\">\n                        <small class=\"invalid\" *ngIf=\"!subirArchivos\">{{mensajeSubida}}</small>\n                    </div>\n                </div>\n                <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\"  [disabled]=\"formAdministrador.invalid\">Crear cuenta</button>\n             </form>\n                  \n        </div> \n\n\n\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    \n    \n    </body>\n    \n    <ngx-spinner\n      bdColor=\"rgba(51,51,51,0.8)\"\n      size=\"medium\"\n      color=\"#fff\"\n      type=\"ball-clip-rotate\"\n    ></ngx-spinner> ","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\">Clinica Virtual<img src=\"../../../assets/imagenes/icono-home.png\" height=\"40px\" width=\"40px\"></a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n  \n      <div class=\"collapse navbar-collapse\" id=\"navbarColor03\">\n        <ul class=\"navbar-nav me-auto\">\n          <li class=\"nav-item\" *ngIf='user$ | async as user'>\n            <a class=\"nav-link active\" >Bienvenido, {{user.email}}</a>\n          </li>\n          <!-- <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Features</a>\n          </li> -->\n        </ul>\n        <form class=\"d-flex\">\n          <a class=\"nav-link\" [routerLink]=\"['/bienvenida']\" (click)=\"onLogout() \" >Cerrar sesión</a>\n        </form>\n      </div>\n    </div>\n</nav> ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './../../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  public user$ : Observable<any>= this.authSvc.afAuth.user;\n  \n\n  constructor(private authSvc : AuthService) { }\n\n  ngOnInit(): void {\n    // this.user = this.authSvc.GetCurrentUser();   \n    // console.log(this.user); \n  }\n\n  async onLogout()\n  {\n    try\n    {\n      await this.authSvc.desloguear();\n      \n    }\n    catch(error)\n    {\n      console.log(error);\n      alert(error);\n    }\n  \n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home-admin',\n  templateUrl: './home-admin.component.html',\n  styleUrls: ['./home-admin.component.scss']\n})\nexport class HomeAdminComponent implements OnInit {\n\n \n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<body>\n<app-navbar></app-navbar>\n\n<div class=\"container\">\n<div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-4\">\n    <div class=\"card\">\n    <div class=\"card-body\">\n             <p >\n              <button  class=\"btn btn-info\" [routerLink]=\"['/home/admin-especialista']\"    >Administrar especialistas</button>\n              <button  class=\"btn btn-info\" [routerLink]=\"['/home/admin-registro']\"   >Registrar usuario nuevo</button>\n              <button  class=\"btn btn-info\"  [routerLink]=\"['/home/admin-info']\"  >Información de usuarios</button>\n            \n              \n            </p>\n            \n        \n         \n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    \n    \n\n</body>"],"sourceRoot":"webpack:///"}